<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/rabbit 
http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">

	<context:component-scan base-package="com.test.core" />

	<context:annotation-config />
		
	<!-- 连接服务配置  channel-cache-size="25" -->
   	<rabbit:connection-factory id="connectionFactory" addresses="192.168.162.100:5672,192.168.162.101:5672" username="admin" password="admin" />
   	
	<!-- Admin object for creation of queues -->
	<rabbit:admin connection-factory="connectionFactory"  />
	
	<!-- queue statement-->
   	<rabbit:queue id="ltest" durable="true" auto-delete="false" exclusive="false" name="ltest"/>
   	<!--<rabbit:queue id="sms" durable="true" auto-delete="false" exclusive="false" name="sms"/>-->
   	
   	 <!-- 配置线程池 -->
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
	    <!-- 线程池维护线程的最少数量 -->
		<property name ="corePoolSize" value ="1" />
	    <!-- 线程池维护线程所允许的空闲时间 -->
		<property name ="keepAliveSeconds" value ="30000" />
	    <!-- 线程池维护线程的最大数量 -->
		<property name ="maxPoolSize" value ="2" />
	    <!-- 线程池所使用的缓冲队列 -->
		<property name ="queueCapacity" value ="200" />
	</bean>
   	
   	<!-- exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="ltest-exchange" durable="true" auto-delete="false" id="ltest-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="ltest" key="ltest_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    
    <!-- 消息监听器 -->  
    <bean id="consumerMessageListener" class="com.test.rabbit.customer.DemoCustomerMessage"/>
    <!--<bean id="consumerMessageListener2" class="com.test.rabbit.customer.DemoCustomerMessage"/>-->

	<!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" task-executor="taskExecutor" max-concurrency="1" prefetch="4">
        <rabbit:listener queues="ltest" ref="consumerMessageListener"/>
    </rabbit:listener-container>

	
</beans>